# user_reg
import tkinter as tk
from tkinter import ttk
from tkinter.font import Font

# user_registration.py에 정의된 클래스를 import
from user_registration import MemberRegistrationWindow
import oracledb

# -----------------------------
# 오라클 DB 연결용 클래스 (같은 설정 재사용)
# -----------------------------
class OracleDB:
    def __init__(self):
        # DB 정보 (필요하면 여기서 바꿔)
        self.dbUser = "fusers"
        self.dbPW   = "skyfive"
        self.dbHost = "deu.duraka.shop"
        self.dbPort = 4265
        self.dbSID  = "xe"
        self.conn   = None

        
    def connect(self):
        if self.conn is None:
            dsn = oracledb.makedsn(self.dbHost, self.dbPort, sid=self.dbSID)
            self.conn = oracledb.connect(user=self.dbUser, password=self.dbPW, dsn=dsn)
        return self.conn

# -----------------------------
# 메인 GUI
# -----------------------------
class BookManagerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("회원 관리 프로그램")
        self.root.geometry("800x600")
        self.root.minsize(700, 500)

        style = ttk.Style()
        style.configure(
            "Gray.TButton",
            background= "#696969",   # 회색
            foreground="black",    # 글자색
            padding=5
        )

        # DB 클래스 인스턴스 생성
        self.db = OracleDB()

        self.create_main_ui()

    def create_main_ui(self):
        title_font = Font(family="Arial", size=18, weight="bold")
        ttk.Label(self.root, text="회원 관리 프로그램", font=title_font).pack(pady=10)

        # 검색 영역
        search_frame = ttk.Frame(self.root, padding=(10, 0, 10, 10))
        search_frame.pack(fill=tk.X)
        ttk.Label(search_frame, text="이름 또는 ID를 입력하십시오:").pack(side=tk.LEFT, padx=(0, 5))
        ttk.Entry(search_frame, width=50).pack(side=tk.LEFT, expand=True, fill=tk.X, padx=(0, 5))
        ttk.Button(search_frame, text="검색").pack(side=tk.LEFT)

        # 버튼 프레임
        tab_frame = ttk.Frame(self.root, padding=(10, 0, 10, 5))
        tab_frame.pack(fill=tk.X)
        ttk.Button(tab_frame, text="회원관리", style="Gray.TButton").pack(side=tk.LEFT, padx=(0, 5))
        ttk.Button(tab_frame, text="도서관리").pack(side=tk.LEFT)
        ttk.Button(tab_frame, text="회원등록", command=self.open_registration_window).pack(side=tk.RIGHT)

        # 회원 목록 테이블 (컬럼 예시)
        columns = ("이름", "생년월일", "성별", "전화번호", "이메일")
        self.user_tree = ttk.Treeview(self.root, columns=columns, show="headings")
        self.user_tree.pack(fill=tk.BOTH, expand=True, padx=10, pady=(0, 10))

        for col in columns:
            self.user_tree.heading(col, text=col)
            self.user_tree.column(col, width=150, anchor=tk.CENTER)

    # 회원등록 창으로 연결
    def open_registration_window(self):
        register_window = tk.Toplevel(self.root)
        # db 객체(연결정보)를 재사용해서 팝업으로 넘김
        MemberRegistrationWindow(register_window, self.db)


# -----------------------------
# 실행부
# -----------------------------
if __name__ == "__main__":
    root = tk.Tk()
    app = BookManagerApp(root)
    root.mainloop()
